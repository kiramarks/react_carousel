{"version":3,"sources":["components/Carousel.js","components/SettingsForm.js","App.js","index.js"],"names":["Carousel","frameSize","itemWidth","animationDuration","swipeImages","position","images","className","type","onClick","src","width","height","alt","style","transform","transition","map","url","imgId","exec","key","SettingsForm","infinite","onChangeSettings","name","onChange","value","hidden","checked","App","state","step","direction","setState","stepWidth","maxPosition","length","target","this","toggleInfinite","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.88bd4ec8.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Carousel = ({\n  frameSize,\n  itemWidth,\n  animationDuration,\n  swipeImages,\n  position,\n  images,\n}) => (\n  <div className=\"carousel\">\n    <button\n      type=\"button\"\n      onClick={() => swipeImages('prev')}\n    >\n      <img\n        src=\"./img/prev.png\"\n        width=\"10px\"\n        height=\"10px\"\n        alt=\"next arrow\"\n      />\n    </button>\n    <div\n      className=\"container\"\n      style={{ width: `${frameSize * itemWidth}px` }}\n    >\n      <ul\n        className=\"carousel__list\"\n        style={{\n          transform: `translateX(${position}px)`,\n          transition: `transform ${animationDuration}ms`,\n        }}\n      >\n        {images.map((url) => {\n          const imgId = /\\d+/.exec(url);\n\n          return (\n            <li key={imgId}>\n              <img\n                style={{\n                  width: `${itemWidth}px`,\n                  height: `${itemWidth}px`,\n                }}\n                src={url}\n                alt={imgId}\n              />\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n    <button\n      type=\"button\"\n      onClick={() => swipeImages('next')}\n    >\n      <img\n        src=\"./img/next.png\"\n        width=\"10px\"\n        height=\"10px\"\n        alt=\"next arrow\"\n      />\n    </button>\n  </div>\n);\n\nexport default Carousel;\n\nCarousel.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.string).isRequired,\n  itemWidth: PropTypes.number.isRequired,\n  frameSize: PropTypes.number.isRequired,\n  position: PropTypes.number.isRequired,\n  animationDuration: PropTypes.number.isRequired,\n  swipeImages: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SettingsForm = ({ infinite, onChangeSettings }) => (\n  <form className=\"form\">\n    <div>\n      <select\n        className=\"form__item form__select\"\n        name=\"itemWidth\"\n        onChange={onChangeSettings}\n      >\n        <option value=\"\" hidden>image size</option>\n        <option value=\"55\">55px</option>\n        <option value=\"100\">100px</option>\n        <option value=\"130\">130px</option>\n        <option value=\"170\">170px</option>\n      </select>\n      <select\n        className=\"form__item form__select\"\n        name=\"step\"\n        onChange={onChangeSettings}\n      >\n        <option value=\"\" hidden>step</option>\n        <option value=\"1\">1</option>\n        <option value=\"2\">2</option>\n        <option value=\"3\">3</option>\n      </select>\n      <select\n        className=\"form__item form__select\"\n        name=\"frameSize\"\n        onChange={onChangeSettings}\n      >\n        <option value=\"\" hidden>frame size</option>\n        <option value=\"1\">1</option>\n        <option value=\"3\">3</option>\n        <option value=\"4\">4</option>\n        <option value=\"5\">5</option>\n      </select>\n    </div>\n    <label>\n      endless scrolling:\n      <input\n        type=\"checkbox\"\n        checked={infinite}\n        onChange={onChangeSettings}\n      />\n    </label>\n  </form>\n);\n\nexport default SettingsForm;\n\nSettingsForm.propTypes = {\n  infinite: PropTypes.bool.isRequired,\n  onChangeSettings: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\n\nimport Carousel from './components/Carousel';\nimport SettingsForm from './components/SettingsForm';\n\nclass App extends React.Component {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    position: 0,\n    infinite: false,\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n  };\n\n  swipeImages = (direction) => {\n    this.setState(() => {\n      const { step, itemWidth, frameSize, infinite, images } = this.state;\n      const stepWidth = itemWidth * step;\n      const frameWidth = itemWidth * frameSize;\n      const carouselWidth = itemWidth * images.length;\n      const maxPosition = frameWidth - carouselWidth;\n\n      if (direction === 'prev') {\n        this.setState((state) => {\n          const { position } = state;\n\n          if (position + stepWidth > 0) {\n            if (infinite && position === 0) {\n              return { position: maxPosition };\n            }\n\n            return { position: 0 };\n          }\n\n          return { position: position + stepWidth };\n        });\n      } else {\n        this.setState((state) => {\n          const { position } = state;\n\n          if (position - (step * itemWidth) < maxPosition) {\n            if (infinite && position === maxPosition) {\n              return { position: 0 };\n            }\n\n            return { position: maxPosition };\n          }\n\n          return { position: position - stepWidth };\n        });\n      }\n    });\n  };\n\n  onChangeSettings = ({ target }) => {\n    const { name, value, type } = target;\n\n    if (type === 'checkbox') {\n      this.setState(state => ({\n        infinite: !state.infinite,\n      }));\n    } else if (name === 'frameSize') {\n      this.setState({\n        [name]: value,\n        step: value,\n      });\n    } else {\n      this.setState({\n        [name]: +value,\n        position: 0,\n      });\n    }\n  }\n\n  render() {\n    const {\n      images,\n      infinite,\n      frameSize,\n      itemWidth,\n      step,\n      position,\n    } = this.state;\n\n    return (\n      <div className=\"app\">\n        <h1>Carousel with images</h1>\n\n        <Carousel\n          images={images}\n          position={position}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={1000}\n          infinite={infinite}\n          swipeImages={this.swipeImages}\n        />\n        <SettingsForm\n          infinite={infinite}\n          toggleInfinite={this.toggleInfinite}\n          onChangeSettings={this.onChangeSettings}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}