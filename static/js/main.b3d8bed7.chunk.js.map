{"version":3,"sources":["components/Carousel.js","components/SettingsForm.js","App.js","index.js"],"names":["Carousel","state","images","position","swipeImages","direction","setState","props","step","itemWidth","frameSize","infinite","stepWidth","maxPosition","length","this","animationDuration","className","type","onClick","src","width","height","alt","style","transform","transition","map","url","imgId","exec","key","PureComponent","SettingsForm","onChangeSettings","name","onChange","value","hidden","checked","App","target","toggleInfinite","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b3d8bed7.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Carousel extends PureComponent {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    position: 0,\n  }\n\n  swipeImages = (direction) => {\n    this.setState(() => {\n      const { step, itemWidth, frameSize, infinite } = this.props;\n      const { images } = this.state;\n      const stepWidth = itemWidth * step;\n      const frameWidth = itemWidth * frameSize;\n      const carouselWidth = itemWidth * images.length;\n      const maxPosition = frameWidth - carouselWidth;\n\n      if (direction === 'prev') {\n        this.setState((state) => {\n          const { position } = state;\n\n          if (position + stepWidth > 0) {\n            if (infinite && position === 0) {\n              return { position: maxPosition };\n            }\n\n            return { position: 0 };\n          }\n\n          return { position: position + (step * itemWidth) };\n        });\n      } else {\n        this.setState((state) => {\n          const { position } = state;\n\n          if (position - (step * itemWidth) < maxPosition) {\n            if (infinite && position === maxPosition) {\n              return { position: 0 };\n            }\n\n            return { position: maxPosition };\n          }\n\n          return { position: position - (step * itemWidth) };\n        });\n      }\n    });\n  };\n\n  render() {\n    const { position, images } = this.state;\n    const { frameSize, itemWidth, animationDuration } = this.props;\n\n    return (\n      <div className=\"Carousel\">\n        <button\n          type=\"button\"\n          onClick={() => this.swipeImages('prev')}\n        >\n          <img\n            src=\"./img/prev.png\"\n            width=\"10px\"\n            height=\"10px\"\n            alt=\"next arrow\"\n          />\n        </button>\n        <div\n          className=\"container\"\n          style={{ width: `${frameSize * itemWidth}px` }}\n        >\n          <ul\n            className=\"Carousel__list\"\n            style={{\n              transform: `translateX(${position}px)`,\n              transition: `transform ${animationDuration}ms`,\n            }}\n          >\n            {images.map((url) => {\n              const imgId = /\\d+/.exec(url);\n\n              return (\n                <li key={imgId}>\n                  <img\n                    style={{ width: `${itemWidth}px` }}\n                    src={url}\n                    alt={imgId}\n                  />\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n        <button\n          type=\"button\"\n          onClick={() => this.swipeImages('next')}\n        >\n          <img\n            src=\"./img/next.png\"\n            width=\"10px\"\n            height=\"10px\"\n            alt=\"next arrow\"\n          />\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n\nCarousel.propTypes = {\n  step: PropTypes.number.isRequired,\n  itemWidth: PropTypes.number.isRequired,\n  frameSize: PropTypes.number.isRequired,\n  animationDuration: PropTypes.number.isRequired,\n  infinite: PropTypes.bool.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SettingsForm = ({ infinite, onChangeSettings }) => (\n  <form className=\"form\">\n    <div>\n      <select\n        className=\"form__item form__select\"\n        name=\"itemWidth\"\n        onChange={onChangeSettings}\n      >\n        <option value=\"\" hidden>image size</option>\n        <option value=\"75\">75px</option>\n        <option value=\"100\">100px</option>\n        <option value=\"200\">200px</option>\n      </select>\n      <select\n        className=\"form__item form__select\"\n        name=\"step\"\n        onChange={onChangeSettings}\n      >\n        <option value=\"\" hidden>step</option>\n        <option value=\"1\">1</option>\n        <option value=\"3\">3</option>\n      </select>\n      <select\n        className=\"form__item form__select\"\n        name=\"frameSize\"\n        onChange={onChangeSettings}\n      >\n        <option value=\"\" hidden>frame size</option>\n        <option value=\"1\">1</option>\n        <option value=\"3\">3</option>\n      </select>\n    </div>\n    <label>\n      endless scrolling:\n      <input\n        type=\"checkbox\"\n        checked={infinite}\n        onChange={onChangeSettings}\n      />\n    </label>\n  </form>\n);\n\nexport default SettingsForm;\n\nSettingsForm.propTypes = {\n  infinite: PropTypes.bool.isRequired,\n  onChangeSettings: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\n\nimport Carousel from './components/Carousel';\nimport SettingsForm from './components/SettingsForm';\n\nclass App extends React.Component {\n  state = {\n    infinite: false,\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n  };\n\n  onChangeSettings = ({ target }) => {\n    const { name, value, type } = target;\n\n    if (type === 'checkbox') {\n      this.setState(state => ({\n        infinite: !state.infinite,\n      }));\n    } else if (name === 'frameSize') {\n      this.setState({\n        [name]: value,\n        step: value,\n      });\n    } else {\n      this.setState({\n        [name]: value,\n      });\n    }\n  }\n\n  render() {\n    const { images, infinite, frameSize, itemWidth, step } = this.state;\n\n    return (\n      <div className=\"app\">\n        <h1>Carousel with images</h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={1000}\n          infinite={infinite}\n        />\n        <SettingsForm\n          infinite={infinite}\n          toggleInfinite={this.toggleInfinite}\n          onChangeSettings={this.onChangeSettings}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}